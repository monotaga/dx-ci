version: 2
jobs: 
  build: 
    docker:
      - image: circleci/node:8.9.4
    steps: 
      - checkout
      - run: 
          command: |
              wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJf -
              ./sfdx/install
          name: "Install SFDX"
      - run: 
          command: "openssl aes-256-cbc -k $AES_KEY -in assets/sfdx.url.enc -out assets/sfdx.url -d"
          name: "Decrypt keyfile"
      - run: 
          command: "sfdx force:auth:sfdxurl:store -f assets/sfdx.url -a circle_build_$CIRCLE_BUILD_NUM --setdefaultdevhubusername"
          name: "Authorize DeveloperHub Org"
      - run: 
          command: "sfdx force:org:create -f config/project-scratch-def.json --setdefaultusername -a circle_build_$CIRCLE_BUILD_NUM\n"
          name: "Create Scratch Org"
      - run: 
          command: "utils/setup_scratch_org.sh circle_build_$CIRCLE_BUILD_NUM"
          name: "Setup Scratch Org Details"
      - run:
          command: "utils/run_tests.sh circle_build_$CIRCLE_BUILD_NUM"
          name: "Run Unit Tests in Scratch Org and parse results"
      - store_artifacts: 
          destination: /tmp/test-result.txt
          path: /test_results/test-result.txt
      - run: 
          command: |
                rm assets/*sfdx.url
          name: "Delete sfdx.urls"
      - run: 
          command: "sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p\n"
          name: "Delete Scratch Org"
      - store_test_results:
          path: test_results
      - run: 
          command: |
              if [[ $CIRCLE_BRANCH != "master" ]];then echo $CIRCLE_BRANCH 
              else 
              #convert to legacy metadata format
              sfdx force:source:convert -r force-app/main/default/ -d deploy
              #decrypt our sfdxurl for deployment org
              openssl aes-256-cbc -k $AES_KEY -in assets/dev_sfdx.url.enc -out assets/dev_sfdx.url -d
              #authenticate to deployment org
              sfdx force:auth:sfdxurl:store -f assets/dev_sfdx.url -a deploy_org
              #deploy metadata
              utils/deploy.sh deploy_org
              fi
          name: "Deploy To Respective Org"
version: 2